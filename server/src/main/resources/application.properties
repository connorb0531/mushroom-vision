spring.application.name=mushroom-vision

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/mushroom_vision}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hikari Connection Pool
spring.datasource.hikari.pool-name=MushroomPool
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:5}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:1}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.validation-timeout=${DB_VALIDATION_TIMEOUT:5000}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Server Configuration
server.port=${SERVER_PORT:8080}

# CORS Configuration
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# ML Integration (Python subprocess)
ml.python.path=${ML_PYTHON_PATH:python3}
ml.predict.script.path=${ML_PREDICT_SCRIPT_PATH:ML/predict.py}
ml.model.path=${ML_MODEL_PATH:ML/mushroom_cnn_model.pth}
ml.process.timeout.ms=${ML_PROCESS_TIMEOUT_MS:15000}